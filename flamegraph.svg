<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1093.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="16703"><g><title>`0x7FFB90148842 (4 samples, 0.02%)</title><rect x="0.0359%" y="933" width="0.0239%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="4"/><text x="0.2859%" y="943.50"></text></g><g><title>`0x7FFB9014D255 (4 samples, 0.02%)</title><rect x="0.0359%" y="917" width="0.0239%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="4"/><text x="0.2859%" y="927.50"></text></g><g><title>`0x7FFB901AB641 (4 samples, 0.02%)</title><rect x="0.0359%" y="901" width="0.0239%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="4"/><text x="0.2859%" y="911.50"></text></g><g><title>`0x7FFB901ABBE8 (3 samples, 0.02%)</title><rect x="0.0419%" y="885" width="0.0180%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="3"/><text x="0.2919%" y="895.50"></text></g><g><title>`0x7FFB8D7B215D (2 samples, 0.01%)</title><rect x="0.0659%" y="821" width="0.0120%" height="15" fill="rgb(208,68,35)" fg:x="11" fg:w="2"/><text x="0.3159%" y="831.50"></text></g><g><title>`0x7FFB9021B6B4 (9 samples, 0.05%)</title><rect x="0.0359%" y="981" width="0.0539%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="9"/><text x="0.2859%" y="991.50"></text></g><g><title>`0x7FFB90195D80 (9 samples, 0.05%)</title><rect x="0.0359%" y="965" width="0.0539%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="9"/><text x="0.2859%" y="975.50"></text></g><g><title>`0x7FFB901484E0 (9 samples, 0.05%)</title><rect x="0.0359%" y="949" width="0.0539%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="9"/><text x="0.2859%" y="959.50"></text></g><g><title>`0x7FFB901488D4 (4 samples, 0.02%)</title><rect x="0.0659%" y="933" width="0.0239%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="4"/><text x="0.3159%" y="943.50"></text></g><g><title>`0x7FFB9017AE03 (4 samples, 0.02%)</title><rect x="0.0659%" y="917" width="0.0239%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="4"/><text x="0.3159%" y="927.50"></text></g><g><title>`0x7FFB9017BCA6 (4 samples, 0.02%)</title><rect x="0.0659%" y="901" width="0.0239%" height="15" fill="rgb(250,228,42)" fg:x="11" fg:w="4"/><text x="0.3159%" y="911.50"></text></g><g><title>`0x7FFB9017BC7A (4 samples, 0.02%)</title><rect x="0.0659%" y="885" width="0.0239%" height="15" fill="rgb(240,193,28)" fg:x="11" fg:w="4"/><text x="0.3159%" y="895.50"></text></g><g><title>`0x7FFB901B196C (4 samples, 0.02%)</title><rect x="0.0659%" y="869" width="0.0239%" height="15" fill="rgb(216,20,37)" fg:x="11" fg:w="4"/><text x="0.3159%" y="879.50"></text></g><g><title>`0x7FFB901B29FE (4 samples, 0.02%)</title><rect x="0.0659%" y="853" width="0.0239%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="4"/><text x="0.3159%" y="863.50"></text></g><g><title>`0x7FFB902A0CEE (4 samples, 0.02%)</title><rect x="0.0659%" y="837" width="0.0239%" height="15" fill="rgb(217,207,13)" fg:x="11" fg:w="4"/><text x="0.3159%" y="847.50"></text></g><g><title>`0x7FFB901A54BB (11 samples, 0.07%)</title><rect x="0.0359%" y="997" width="0.0659%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="11"/><text x="0.2859%" y="1007.50"></text></g><g><title>`0x7FFB901A55C5 (2 samples, 0.01%)</title><rect x="0.1078%" y="997" width="0.0120%" height="15" fill="rgb(225,20,46)" fg:x="18" fg:w="2"/><text x="0.3578%" y="1007.50"></text></g><g><title>`0x7FFB90149E0E (2 samples, 0.01%)</title><rect x="0.1078%" y="981" width="0.0120%" height="15" fill="rgb(210,31,41)" fg:x="18" fg:w="2"/><text x="0.3578%" y="991.50"></text></g><g><title>`0x7FFB9014BC3E (2 samples, 0.01%)</title><rect x="0.1078%" y="965" width="0.0120%" height="15" fill="rgb(221,200,47)" fg:x="18" fg:w="2"/><text x="0.3578%" y="975.50"></text></g><g><title>`0x7FFB901AB641 (2 samples, 0.01%)</title><rect x="0.1078%" y="949" width="0.0120%" height="15" fill="rgb(226,26,5)" fg:x="18" fg:w="2"/><text x="0.3578%" y="959.50"></text></g><g><title>`0x7FFB901ABBE8 (2 samples, 0.01%)</title><rect x="0.1078%" y="933" width="0.0120%" height="15" fill="rgb(249,33,26)" fg:x="18" fg:w="2"/><text x="0.3578%" y="943.50"></text></g><g><title>`0x7FFB901A56DC (3 samples, 0.02%)</title><rect x="0.1197%" y="997" width="0.0180%" height="15" fill="rgb(235,183,28)" fg:x="20" fg:w="3"/><text x="0.3697%" y="1007.50"></text></g><g><title>`0x7FFB9017BCA6 (3 samples, 0.02%)</title><rect x="0.1197%" y="981" width="0.0180%" height="15" fill="rgb(221,5,38)" fg:x="20" fg:w="3"/><text x="0.3697%" y="991.50"></text></g><g><title>`0x7FFB9017BCA6 (2 samples, 0.01%)</title><rect x="0.1257%" y="965" width="0.0120%" height="15" fill="rgb(247,18,42)" fg:x="21" fg:w="2"/><text x="0.3757%" y="975.50"></text></g><g><title>`0x7FFB9017BC7A (2 samples, 0.01%)</title><rect x="0.1257%" y="949" width="0.0120%" height="15" fill="rgb(241,131,45)" fg:x="21" fg:w="2"/><text x="0.3757%" y="959.50"></text></g><g><title>`0x7FFB901B196C (2 samples, 0.01%)</title><rect x="0.1257%" y="933" width="0.0120%" height="15" fill="rgb(249,31,29)" fg:x="21" fg:w="2"/><text x="0.3757%" y="943.50"></text></g><g><title>`0x7FFB901B29FE (2 samples, 0.01%)</title><rect x="0.1257%" y="917" width="0.0120%" height="15" fill="rgb(225,111,53)" fg:x="21" fg:w="2"/><text x="0.3757%" y="927.50"></text></g><g><title>`0x7FFB902A0CEE (2 samples, 0.01%)</title><rect x="0.1257%" y="901" width="0.0120%" height="15" fill="rgb(238,160,17)" fg:x="21" fg:w="2"/><text x="0.3757%" y="911.50"></text></g><g><title>`0x7FFB8D416E26 (2 samples, 0.01%)</title><rect x="0.1257%" y="885" width="0.0120%" height="15" fill="rgb(214,148,48)" fg:x="21" fg:w="2"/><text x="0.3757%" y="895.50"></text></g><g><title>`0x7FFB8D47AD56 (2 samples, 0.01%)</title><rect x="0.1257%" y="869" width="0.0120%" height="15" fill="rgb(232,36,49)" fg:x="21" fg:w="2"/><text x="0.3757%" y="879.50"></text></g><g><title>`0x7FFB90175FCE (24 samples, 0.14%)</title><rect x="0.0000%" y="1045" width="0.1437%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="24"/><text x="0.2500%" y="1055.50"></text></g><g><title>`0x7FFB901A367E (24 samples, 0.14%)</title><rect x="0.0000%" y="1029" width="0.1437%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="24"/><text x="0.2500%" y="1039.50"></text></g><g><title>`0x7FFB901A3894 (24 samples, 0.14%)</title><rect x="0.0000%" y="1013" width="0.1437%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="24"/><text x="0.2500%" y="1023.50"></text></g><g><title>`0x7FFB901D2A21 (2 samples, 0.01%)</title><rect x="0.1557%" y="1013" width="0.0120%" height="15" fill="rgb(254,191,54)" fg:x="26" fg:w="2"/><text x="0.4057%" y="1023.50"></text></g><g><title>`0x7FFB901BB430 (2 samples, 0.01%)</title><rect x="0.1557%" y="997" width="0.0120%" height="15" fill="rgb(241,83,37)" fg:x="26" fg:w="2"/><text x="0.4057%" y="1007.50"></text></g><g><title>`0x7FFB901BC2AA (2 samples, 0.01%)</title><rect x="0.1557%" y="981" width="0.0120%" height="15" fill="rgb(233,36,39)" fg:x="26" fg:w="2"/><text x="0.4057%" y="991.50"></text></g><g><title>`0x7FFB90148860 (3 samples, 0.02%)</title><rect x="0.1796%" y="885" width="0.0180%" height="15" fill="rgb(226,3,54)" fg:x="30" fg:w="3"/><text x="0.4296%" y="895.50"></text></g><g><title>`0x7FFB901BC384 (3 samples, 0.02%)</title><rect x="0.1796%" y="869" width="0.0180%" height="15" fill="rgb(245,192,40)" fg:x="30" fg:w="3"/><text x="0.4296%" y="879.50"></text></g><g><title>`0x7FFB901AE55D (3 samples, 0.02%)</title><rect x="0.1796%" y="853" width="0.0180%" height="15" fill="rgb(238,167,29)" fg:x="30" fg:w="3"/><text x="0.4296%" y="863.50"></text></g><g><title>`0x7FFB901B068C (2 samples, 0.01%)</title><rect x="0.1856%" y="837" width="0.0120%" height="15" fill="rgb(232,182,51)" fg:x="31" fg:w="2"/><text x="0.4356%" y="847.50"></text></g><g><title>`0x7FFB901ABBE8 (2 samples, 0.01%)</title><rect x="0.1856%" y="821" width="0.0120%" height="15" fill="rgb(231,60,39)" fg:x="31" fg:w="2"/><text x="0.4356%" y="831.50"></text></g><g><title>`0x7FFB8D4A0046 (6 samples, 0.04%)</title><rect x="0.1736%" y="997" width="0.0359%" height="15" fill="rgb(208,69,12)" fg:x="29" fg:w="6"/><text x="0.4236%" y="1007.50"></text></g><g><title>`0x7FFB8D48553D (6 samples, 0.04%)</title><rect x="0.1736%" y="981" width="0.0359%" height="15" fill="rgb(235,93,37)" fg:x="29" fg:w="6"/><text x="0.4236%" y="991.50"></text></g><g><title>`0x7FFB8D41423B (6 samples, 0.04%)</title><rect x="0.1736%" y="965" width="0.0359%" height="15" fill="rgb(213,116,39)" fg:x="29" fg:w="6"/><text x="0.4236%" y="975.50"></text></g><g><title>`0x7FFB8D476225 (6 samples, 0.04%)</title><rect x="0.1736%" y="949" width="0.0359%" height="15" fill="rgb(222,207,29)" fg:x="29" fg:w="6"/><text x="0.4236%" y="959.50"></text></g><g><title>`0x7FFB8D6A2AC6 (6 samples, 0.04%)</title><rect x="0.1736%" y="933" width="0.0359%" height="15" fill="rgb(206,96,30)" fg:x="29" fg:w="6"/><text x="0.4236%" y="943.50"></text></g><g><title>`0x7FFB90195D80 (6 samples, 0.04%)</title><rect x="0.1736%" y="917" width="0.0359%" height="15" fill="rgb(218,138,4)" fg:x="29" fg:w="6"/><text x="0.4236%" y="927.50"></text></g><g><title>`0x7FFB901484E0 (6 samples, 0.04%)</title><rect x="0.1736%" y="901" width="0.0359%" height="15" fill="rgb(250,191,14)" fg:x="29" fg:w="6"/><text x="0.4236%" y="911.50"></text></g><g><title>`0x7FFB901488D4 (2 samples, 0.01%)</title><rect x="0.1976%" y="885" width="0.0120%" height="15" fill="rgb(239,60,40)" fg:x="33" fg:w="2"/><text x="0.4476%" y="895.50"></text></g><g><title>`0x7FFB9017AE03 (2 samples, 0.01%)</title><rect x="0.1976%" y="869" width="0.0120%" height="15" fill="rgb(206,27,48)" fg:x="33" fg:w="2"/><text x="0.4476%" y="879.50"></text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::Interpreter::op_add (44 samples, 0.26%)</title><rect x="4.2388%" y="789" width="0.2634%" height="15" fill="rgb(225,35,8)" fg:x="708" fg:w="44"/><text x="4.4888%" y="799.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::pop (36 samples, 0.22%)</title><rect x="4.2867%" y="773" width="0.2155%" height="15" fill="rgb(250,213,24)" fg:x="716" fg:w="36"/><text x="4.5367%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::as_ptr (5 samples, 0.03%)</title><rect x="4.4723%" y="757" width="0.0299%" height="15" fill="rgb(247,123,22)" fg:x="747" fg:w="5"/><text x="4.7223%" y="767.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::ptr (3 samples, 0.02%)</title><rect x="4.4842%" y="741" width="0.0180%" height="15" fill="rgb(231,138,38)" fg:x="749" fg:w="3"/><text x="4.7342%" y="751.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.02%)</title><rect x="4.4842%" y="725" width="0.0180%" height="15" fill="rgb(231,145,46)" fg:x="749" fg:w="3"/><text x="4.7342%" y="735.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.02%)</title><rect x="4.4842%" y="709" width="0.0180%" height="15" fill="rgb(251,118,11)" fg:x="749" fg:w="3"/><text x="4.7342%" y="719.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::pop (4,843 samples, 28.99%)</title><rect x="4.5261%" y="773" width="28.9948%" height="15" fill="rgb(217,147,25)" fg:x="756" fg:w="4843"/><text x="4.7761%" y="783.50">kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend..</text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::as_ptr (4,839 samples, 28.97%)</title><rect x="4.5501%" y="757" width="28.9708%" height="15" fill="rgb(247,81,37)" fg:x="760" fg:w="4839"/><text x="4.8001%" y="767.50">kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend..</text></g><g><title>`0x7FFB7ECD0582 (4 samples, 0.02%)</title><rect x="33.5808%" y="757" width="0.0239%" height="15" fill="rgb(209,12,38)" fg:x="5609" fg:w="4"/><text x="33.8308%" y="767.50"></text></g><g><title>`0x7FFB7ECD058B (6,116 samples, 36.62%)</title><rect x="33.6047%" y="757" width="36.6162%" height="15" fill="rgb(227,1,9)" fg:x="5613" fg:w="6116"/><text x="33.8547%" y="767.50">`0x7FFB7ECD058B</text></g><g><title>`0x7FFB7ECD058D (14 samples, 0.08%)</title><rect x="70.2209%" y="757" width="0.0838%" height="15" fill="rgb(248,47,43)" fg:x="11729" fg:w="14"/><text x="70.4709%" y="767.50"></text></g><g><title>`0x7FFB7ECD058E (3 samples, 0.02%)</title><rect x="70.3047%" y="757" width="0.0180%" height="15" fill="rgb(221,10,30)" fg:x="11743" fg:w="3"/><text x="70.5547%" y="767.50"></text></g><g><title>`0x7FFB7ECD094A (3 samples, 0.02%)</title><rect x="70.3287%" y="757" width="0.0180%" height="15" fill="rgb(210,229,1)" fg:x="11747" fg:w="3"/><text x="70.5787%" y="767.50"></text></g><g><title>`0x7FFB7ECD0A64 (7 samples, 0.04%)</title><rect x="70.3466%" y="757" width="0.0419%" height="15" fill="rgb(222,148,37)" fg:x="11750" fg:w="7"/><text x="70.5966%" y="767.50"></text></g><g><title>kaori.exe`core::ptr::mut_ptr::impl$0::add (5 samples, 0.03%)</title><rect x="70.3945%" y="757" width="0.0299%" height="15" fill="rgb(234,67,33)" fg:x="11758" fg:w="5"/><text x="70.6445%" y="767.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;kaori::backend::vm::interpreter::FunctionFrame,alloc::alloc::Global&gt;::push (6,166 samples, 36.92%)</title><rect x="33.5209%" y="773" width="36.9155%" height="15" fill="rgb(247,98,35)" fg:x="5599" fg:w="6166"/><text x="33.7709%" y="783.50">kaori.exe`alloc::vec::Vec&lt;kaori::backend::vm::interpreter::F..</text></g><g><title>kaori.exe`core::ptr::write (2 samples, 0.01%)</title><rect x="70.4245%" y="757" width="0.0120%" height="15" fill="rgb(247,138,52)" fg:x="11763" fg:w="2"/><text x="70.6745%" y="767.50"></text></g><g><title>`0x7FFB7ECD0943 (2 samples, 0.01%)</title><rect x="70.4963%" y="725" width="0.0120%" height="15" fill="rgb(213,79,30)" fg:x="11775" fg:w="2"/><text x="70.7463%" y="735.50"></text></g><g><title>`0x7FFB7ECD0A64 (3 samples, 0.02%)</title><rect x="70.5203%" y="725" width="0.0180%" height="15" fill="rgb(246,177,23)" fg:x="11779" fg:w="3"/><text x="70.7703%" y="735.50"></text></g><g><title>`0x7FFB7ECD0582 (8 samples, 0.05%)</title><rect x="70.5562%" y="709" width="0.0479%" height="15" fill="rgb(230,62,27)" fg:x="11785" fg:w="8"/><text x="70.8062%" y="719.50"></text></g><g><title>`0x7FFB7ECD058B (4,481 samples, 26.83%)</title><rect x="70.6041%" y="709" width="26.8275%" height="15" fill="rgb(216,154,8)" fg:x="11793" fg:w="4481"/><text x="70.8541%" y="719.50">`0x7FFB7ECD058B</text></g><g><title>`0x7FFB7ECD058D (41 samples, 0.25%)</title><rect x="97.4316%" y="709" width="0.2455%" height="15" fill="rgb(244,35,45)" fg:x="16274" fg:w="41"/><text x="97.6816%" y="719.50"></text></g><g><title>`0x7FFB7ECD0940 (3 samples, 0.02%)</title><rect x="97.6831%" y="709" width="0.0180%" height="15" fill="rgb(251,115,12)" fg:x="16316" fg:w="3"/><text x="97.9331%" y="719.50"></text></g><g><title>`0x7FFB7ECD0A64 (5 samples, 0.03%)</title><rect x="97.7010%" y="709" width="0.0299%" height="15" fill="rgb(240,54,50)" fg:x="16319" fg:w="5"/><text x="97.9510%" y="719.50"></text></g><g><title>kaori.exe`core::cmp::impls::impl$58::lt (4,545 samples, 27.21%)</title><rect x="70.5382%" y="725" width="27.2107%" height="15" fill="rgb(233,84,52)" fg:x="11782" fg:w="4545"/><text x="70.7882%" y="735.50">kaori.exe`core::cmp::impls::impl$58::lt</text></g><g><title>kaori.exe`core::iter::adapters::rev::impl$1::next(core::iter::adapters::rev::Rev&lt;core::ops::range::Range (4,564 samples, 27.32%)</title><rect x="70.4364%" y="773" width="27.3244%" height="15" fill="rgb(207,117,47)" fg:x="11765" fg:w="4564"/><text x="70.6864%" y="783.50">kaori.exe`core::iter::adapters::rev::impl$1:..</text></g><g><title>kaori.exe`core::iter::range::impl$7::next_back(core::ops::range::Range (4,564 samples, 27.32%)</title><rect x="70.4364%" y="757" width="27.3244%" height="15" fill="rgb(249,43,39)" fg:x="11765" fg:w="4564"/><text x="70.6864%" y="767.50">kaori.exe`core::iter::range::impl$7::next_ba..</text></g><g><title>kaori.exe`core::iter::range::impl$5::spec_next_back(core::ops::range::Range (4,564 samples, 27.32%)</title><rect x="70.4364%" y="741" width="27.3244%" height="15" fill="rgb(209,38,44)" fg:x="11765" fg:w="4564"/><text x="70.6864%" y="751.50">kaori.exe`core::iter::range::impl$5::spec_ne..</text></g><g><title>kaori.exe`memcpy (2 samples, 0.01%)</title><rect x="97.7489%" y="725" width="0.0120%" height="15" fill="rgb(236,212,23)" fg:x="16327" fg:w="2"/><text x="97.9989%" y="735.50"></text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::Interpreter::op_call (15,585 samples, 93.31%)</title><rect x="4.5022%" y="789" width="93.3066%" height="15" fill="rgb(242,79,21)" fg:x="752" fg:w="15585"/><text x="4.7522%" y="799.50">kaori.exe`kaori::backend::vm::interpreter::Interpreter::op_call</text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::FunctionFrame::new (8 samples, 0.05%)</title><rect x="97.7609%" y="773" width="0.0479%" height="15" fill="rgb(211,96,35)" fg:x="16329" fg:w="8"/><text x="98.0109%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::pop (8 samples, 0.05%)</title><rect x="98.4015%" y="773" width="0.0479%" height="15" fill="rgb(253,215,40)" fg:x="16436" fg:w="8"/><text x="98.6515%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::as_ptr (6 samples, 0.04%)</title><rect x="98.4135%" y="757" width="0.0359%" height="15" fill="rgb(211,81,21)" fg:x="16438" fg:w="6"/><text x="98.6635%" y="767.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::ptr (2 samples, 0.01%)</title><rect x="98.4374%" y="741" width="0.0120%" height="15" fill="rgb(208,190,38)" fg:x="16442" fg:w="2"/><text x="98.6874%" y="751.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.01%)</title><rect x="98.4374%" y="725" width="0.0120%" height="15" fill="rgb(235,213,38)" fg:x="16442" fg:w="2"/><text x="98.6874%" y="735.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.01%)</title><rect x="98.4374%" y="709" width="0.0120%" height="15" fill="rgb(237,122,38)" fg:x="16442" fg:w="2"/><text x="98.6874%" y="719.50"></text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::Interpreter::op_equal (114 samples, 0.68%)</title><rect x="97.8088%" y="789" width="0.6825%" height="15" fill="rgb(244,218,35)" fg:x="16337" fg:w="114"/><text x="98.0588%" y="799.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::push(enum2$ (7 samples, 0.04%)</title><rect x="98.4494%" y="773" width="0.0419%" height="15" fill="rgb(240,68,47)" fg:x="16444" fg:w="7"/><text x="98.6994%" y="783.50"></text></g><g><title>kaori.exe`core::ptr::write(enum2$&lt;kaori::backend::vm::value::Value&gt;*, enum2$ (7 samples, 0.04%)</title><rect x="98.4494%" y="757" width="0.0419%" height="15" fill="rgb(210,16,53)" fg:x="16444" fg:w="7"/><text x="98.6994%" y="767.50"></text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::Interpreter::op_jump_if_false (59 samples, 0.35%)</title><rect x="98.4913%" y="789" width="0.3532%" height="15" fill="rgb(235,124,12)" fg:x="16451" fg:w="59"/><text x="98.7413%" y="799.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::pop (4 samples, 0.02%)</title><rect x="98.8206%" y="773" width="0.0239%" height="15" fill="rgb(224,169,11)" fg:x="16506" fg:w="4"/><text x="99.0706%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::as_ptr (4 samples, 0.02%)</title><rect x="98.8206%" y="757" width="0.0239%" height="15" fill="rgb(250,166,2)" fg:x="16506" fg:w="4"/><text x="99.0706%" y="767.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::ptr (4 samples, 0.02%)</title><rect x="98.8206%" y="741" width="0.0239%" height="15" fill="rgb(242,216,29)" fg:x="16506" fg:w="4"/><text x="99.0706%" y="751.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.02%)</title><rect x="98.8206%" y="725" width="0.0239%" height="15" fill="rgb(230,116,27)" fg:x="16506" fg:w="4"/><text x="99.0706%" y="735.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.02%)</title><rect x="98.8206%" y="709" width="0.0239%" height="15" fill="rgb(228,99,48)" fg:x="16506" fg:w="4"/><text x="99.0706%" y="719.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::push(enum2$ (8 samples, 0.05%)</title><rect x="98.9523%" y="773" width="0.0479%" height="15" fill="rgb(253,11,6)" fg:x="16528" fg:w="8"/><text x="99.2023%" y="783.50"></text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::Interpreter::op_load_const (28 samples, 0.17%)</title><rect x="98.8445%" y="789" width="0.1676%" height="15" fill="rgb(247,143,39)" fg:x="16510" fg:w="28"/><text x="99.0945%" y="799.50"></text></g><g><title>kaori.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;enum2$ (2 samples, 0.01%)</title><rect x="99.0002%" y="773" width="0.0120%" height="15" fill="rgb(236,97,10)" fg:x="16536" fg:w="2"/><text x="99.2502%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::as_slice (2 samples, 0.01%)</title><rect x="99.0002%" y="757" width="0.0120%" height="15" fill="rgb(233,208,19)" fg:x="16536" fg:w="2"/><text x="99.2502%" y="767.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::as_ptr (2 samples, 0.01%)</title><rect x="99.0002%" y="741" width="0.0120%" height="15" fill="rgb(216,164,2)" fg:x="16536" fg:w="2"/><text x="99.2502%" y="751.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::ptr (2 samples, 0.01%)</title><rect x="99.0002%" y="725" width="0.0120%" height="15" fill="rgb(220,129,5)" fg:x="16536" fg:w="2"/><text x="99.2502%" y="735.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.01%)</title><rect x="99.0002%" y="709" width="0.0120%" height="15" fill="rgb(242,17,10)" fg:x="16536" fg:w="2"/><text x="99.2502%" y="719.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.01%)</title><rect x="99.0002%" y="693" width="0.0120%" height="15" fill="rgb(242,107,0)" fg:x="16536" fg:w="2"/><text x="99.2502%" y="703.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::push(enum2$ (8 samples, 0.05%)</title><rect x="99.2756%" y="773" width="0.0479%" height="15" fill="rgb(251,28,31)" fg:x="16582" fg:w="8"/><text x="99.5256%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (33 samples, 0.20%)</title><rect x="99.3235%" y="773" width="0.1976%" height="15" fill="rgb(233,223,10)" fg:x="16590" fg:w="33"/><text x="99.5735%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;kaori::backend::vm::interpreter::FunctionFrame,alloc::alloc::Global&gt;::as_slice (24 samples, 0.14%)</title><rect x="99.3774%" y="757" width="0.1437%" height="15" fill="rgb(215,21,27)" fg:x="16599" fg:w="24"/><text x="99.6274%" y="767.50"></text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::Interpreter::op_load_local (89 samples, 0.53%)</title><rect x="99.0122%" y="789" width="0.5328%" height="15" fill="rgb(232,23,21)" fg:x="16538" fg:w="89"/><text x="99.2622%" y="799.50"></text></g><g><title>kaori.exe`kaori::backend::vm::register::Register::load_local (4 samples, 0.02%)</title><rect x="99.5210%" y="773" width="0.0239%" height="15" fill="rgb(244,5,23)" fg:x="16623" fg:w="4"/><text x="99.7710%" y="783.50"></text></g><g><title>kaori.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="99.5210%" y="757" width="0.0239%" height="15" fill="rgb(226,81,46)" fg:x="16623" fg:w="4"/><text x="99.7710%" y="767.50"></text></g><g><title>kaori.exe`core::slice::index::impl$2::get_unchecked(unsigned long long, ptr_const$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="99.5210%" y="741" width="0.0239%" height="15" fill="rgb(247,70,30)" fg:x="16623" fg:w="4"/><text x="99.7710%" y="751.50"></text></g><g><title>kaori.exe`core::slice::index::get_noubcheck(ptr_const$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="99.5210%" y="725" width="0.0239%" height="15" fill="rgb(212,68,19)" fg:x="16623" fg:w="4"/><text x="99.7710%" y="735.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;kaori::backend::vm::interpreter::FunctionFrame,alloc::alloc::Global&gt;::pop (2 samples, 0.01%)</title><rect x="99.5510%" y="773" width="0.0120%" height="15" fill="rgb(240,187,13)" fg:x="16628" fg:w="2"/><text x="99.8010%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (3 samples, 0.02%)</title><rect x="99.5630%" y="773" width="0.0180%" height="15" fill="rgb(223,113,26)" fg:x="16630" fg:w="3"/><text x="99.8130%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;kaori::backend::vm::interpreter::FunctionFrame,alloc::alloc::Global&gt;::as_slice (3 samples, 0.02%)</title><rect x="99.5630%" y="757" width="0.0180%" height="15" fill="rgb(206,192,2)" fg:x="16630" fg:w="3"/><text x="99.8130%" y="767.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;kaori::backend::vm::interpreter::FunctionFrame,alloc::alloc::Global&gt;::as_ptr (2 samples, 0.01%)</title><rect x="99.5689%" y="741" width="0.0120%" height="15" fill="rgb(241,108,4)" fg:x="16631" fg:w="2"/><text x="99.8189%" y="751.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVec&lt;kaori::backend::vm::interpreter::FunctionFrame,alloc::alloc::Global&gt;::ptr (2 samples, 0.01%)</title><rect x="99.5689%" y="725" width="0.0120%" height="15" fill="rgb(247,173,49)" fg:x="16631" fg:w="2"/><text x="99.8189%" y="735.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.01%)</title><rect x="99.5689%" y="709" width="0.0120%" height="15" fill="rgb(224,114,35)" fg:x="16631" fg:w="2"/><text x="99.8189%" y="719.50"></text></g><g><title>kaori.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.01%)</title><rect x="99.5689%" y="693" width="0.0120%" height="15" fill="rgb(245,159,27)" fg:x="16631" fg:w="2"/><text x="99.8189%" y="703.50"></text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::Interpreter::op_return (9 samples, 0.05%)</title><rect x="99.5450%" y="789" width="0.0539%" height="15" fill="rgb(245,172,44)" fg:x="16627" fg:w="9"/><text x="99.7950%" y="799.50"></text></g><g><title>kaori.exe`core::slice::impl$0::last(ref$&lt;slice2$ (3 samples, 0.02%)</title><rect x="99.5809%" y="773" width="0.0180%" height="15" fill="rgb(236,23,11)" fg:x="16633" fg:w="3"/><text x="99.8309%" y="783.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::pop (5 samples, 0.03%)</title><rect x="99.6168%" y="773" width="0.0299%" height="15" fill="rgb(205,117,38)" fg:x="16639" fg:w="5"/><text x="99.8668%" y="783.50"></text></g><g><title>kaori.exe`core::ptr::read(enum2$ (2 samples, 0.01%)</title><rect x="99.6348%" y="757" width="0.0120%" height="15" fill="rgb(237,72,25)" fg:x="16642" fg:w="2"/><text x="99.8848%" y="767.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$ (16,639 samples, 99.62%)</title><rect x="0.2215%" y="821" width="99.6168%" height="15" fill="rgb(244,70,9)" fg:x="37" fg:w="16639"/><text x="0.4715%" y="831.50">kaori.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$</text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::Interpreter::execute_instructions (16,639 samples, 99.62%)</title><rect x="0.2215%" y="805" width="99.6168%" height="15" fill="rgb(217,125,39)" fg:x="37" fg:w="16639"/><text x="0.4715%" y="815.50">kaori.exe`kaori::backend::vm::interpreter::Interpreter::execute_instructions</text></g><g><title>kaori.exe`kaori::backend::vm::interpreter::Interpreter::op_subtract (40 samples, 0.24%)</title><rect x="99.5989%" y="789" width="0.2395%" height="15" fill="rgb(235,36,10)" fg:x="16636" fg:w="40"/><text x="99.8489%" y="799.50"></text></g><g><title>kaori.exe`alloc::vec::Vec&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;::push(enum2$ (32 samples, 0.19%)</title><rect x="99.6468%" y="773" width="0.1916%" height="15" fill="rgb(251,123,47)" fg:x="16644" fg:w="32"/><text x="99.8968%" y="783.50"></text></g><g><title>kaori.exe`core::ptr::write(enum2$&lt;kaori::backend::vm::value::Value&gt;*, enum2$ (32 samples, 0.19%)</title><rect x="99.6468%" y="757" width="0.1916%" height="15" fill="rgb(221,13,13)" fg:x="16644" fg:w="32"/><text x="99.8968%" y="767.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::is_console (2 samples, 0.01%)</title><rect x="99.8443%" y="325" width="0.0120%" height="15" fill="rgb(238,131,9)" fg:x="16677" fg:w="2"/><text x="100.0943%" y="335.50"></text></g><g><title>`0x7FFB8D7876C2 (2 samples, 0.01%)</title><rect x="99.8443%" y="309" width="0.0120%" height="15" fill="rgb(211,50,8)" fg:x="16677" fg:w="2"/><text x="100.0943%" y="319.50"></text></g><g><title>`0x7FFB902A2994 (2 samples, 0.01%)</title><rect x="99.8443%" y="293" width="0.0120%" height="15" fill="rgb(245,182,24)" fg:x="16677" fg:w="2"/><text x="100.0943%" y="303.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::is_utf8_console (4 samples, 0.02%)</title><rect x="99.8563%" y="325" width="0.0239%" height="15" fill="rgb(242,14,37)" fg:x="16679" fg:w="4"/><text x="100.1063%" y="335.50"></text></g><g><title>`0x7FFB8D74E6B5 (4 samples, 0.02%)</title><rect x="99.8563%" y="309" width="0.0239%" height="15" fill="rgb(246,228,12)" fg:x="16679" fg:w="4"/><text x="100.1063%" y="319.50"></text></g><g><title>`0x7FFB902A2994 (4 samples, 0.02%)</title><rect x="99.8563%" y="293" width="0.0239%" height="15" fill="rgb(213,55,15)" fg:x="16679" fg:w="4"/><text x="100.1063%" y="303.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (8 samples, 0.05%)</title><rect x="99.8443%" y="501" width="0.0479%" height="15" fill="rgb(209,9,3)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="511.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (8 samples, 0.05%)</title><rect x="99.8443%" y="485" width="0.0479%" height="15" fill="rgb(230,59,30)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="495.50"></text></g><g><title>kaori.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (8 samples, 0.05%)</title><rect x="99.8443%" y="469" width="0.0479%" height="15" fill="rgb(209,121,21)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="479.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$19::write_all (8 samples, 0.05%)</title><rect x="99.8443%" y="453" width="0.0479%" height="15" fill="rgb(220,109,13)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="463.50"></text></g><g><title>kaori.exe`std::sync::reentrant_lock::impl$11::deref (8 samples, 0.05%)</title><rect x="99.8443%" y="437" width="0.0479%" height="15" fill="rgb(232,18,1)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="447.50"></text></g><g><title>kaori.exe`std::io::buffered::linewritershim::impl$1::write_all (8 samples, 0.05%)</title><rect x="99.8443%" y="421" width="0.0479%" height="15" fill="rgb(215,41,42)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="431.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (8 samples, 0.05%)</title><rect x="99.8443%" y="405" width="0.0479%" height="15" fill="rgb(224,123,36)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="415.50"></text></g><g><title>kaori.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (8 samples, 0.05%)</title><rect x="99.8443%" y="389" width="0.0479%" height="15" fill="rgb(240,125,3)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="399.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$1::write (8 samples, 0.05%)</title><rect x="99.8443%" y="373" width="0.0479%" height="15" fill="rgb(205,98,50)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="383.50"></text></g><g><title>kaori.exe`std::io::stdio::handle_ebadf (8 samples, 0.05%)</title><rect x="99.8443%" y="357" width="0.0479%" height="15" fill="rgb(205,185,37)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="367.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write (8 samples, 0.05%)</title><rect x="99.8443%" y="341" width="0.0479%" height="15" fill="rgb(238,207,15)" fg:x="16677" fg:w="8"/><text x="100.0943%" y="351.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write_console_utf16 (2 samples, 0.01%)</title><rect x="99.8803%" y="325" width="0.0120%" height="15" fill="rgb(213,199,42)" fg:x="16683" fg:w="2"/><text x="100.1303%" y="335.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write_valid_utf8_to_console (2 samples, 0.01%)</title><rect x="99.8803%" y="309" width="0.0120%" height="15" fill="rgb(235,201,11)" fg:x="16683" fg:w="2"/><text x="100.1303%" y="319.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write_u16s (2 samples, 0.01%)</title><rect x="99.8803%" y="293" width="0.0120%" height="15" fill="rgb(207,46,11)" fg:x="16683" fg:w="2"/><text x="100.1303%" y="303.50"></text></g><g><title>kaori.exe`std::sys::pal::windows::cvt (2 samples, 0.01%)</title><rect x="99.8803%" y="277" width="0.0120%" height="15" fill="rgb(241,35,35)" fg:x="16683" fg:w="2"/><text x="100.1303%" y="287.50"></text></g><g><title>kaori.exe`std::sys::pal::windows::impl$3::is_zero (2 samples, 0.01%)</title><rect x="99.8803%" y="261" width="0.0120%" height="15" fill="rgb(243,32,47)" fg:x="16683" fg:w="2"/><text x="100.1303%" y="271.50"></text></g><g><title>`0x7FFB8D79448E (2 samples, 0.01%)</title><rect x="99.8803%" y="245" width="0.0120%" height="15" fill="rgb(247,202,23)" fg:x="16683" fg:w="2"/><text x="100.1303%" y="255.50"></text></g><g><title>`0x7FFB8D7945CC (2 samples, 0.01%)</title><rect x="99.8803%" y="229" width="0.0120%" height="15" fill="rgb(219,102,11)" fg:x="16683" fg:w="2"/><text x="100.1303%" y="239.50"></text></g><g><title>`0x7FFB902A2994 (2 samples, 0.01%)</title><rect x="99.8803%" y="213" width="0.0120%" height="15" fill="rgb(243,110,44)" fg:x="16683" fg:w="2"/><text x="100.1303%" y="223.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugTuple::field (4 samples, 0.02%)</title><rect x="99.8922%" y="421" width="0.0239%" height="15" fill="rgb(222,74,54)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="431.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugTuple::field_with (4 samples, 0.02%)</title><rect x="99.8922%" y="405" width="0.0239%" height="15" fill="rgb(216,99,12)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="415.50"></text></g><g><title>kaori.exe`core::result::Result::and_then (4 samples, 0.02%)</title><rect x="99.8922%" y="389" width="0.0239%" height="15" fill="rgb(226,22,26)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="399.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$4::field_with::closure$0 (4 samples, 0.02%)</title><rect x="99.8922%" y="373" width="0.0239%" height="15" fill="rgb(217,163,10)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="383.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (4 samples, 0.02%)</title><rect x="99.8922%" y="357" width="0.0239%" height="15" fill="rgb(213,25,53)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="367.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (4 samples, 0.02%)</title><rect x="99.8922%" y="341" width="0.0239%" height="15" fill="rgb(252,105,26)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="351.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (4 samples, 0.02%)</title><rect x="99.8922%" y="325" width="0.0239%" height="15" fill="rgb(220,39,43)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="335.50"></text></g><g><title>kaori.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (4 samples, 0.02%)</title><rect x="99.8922%" y="309" width="0.0239%" height="15" fill="rgb(229,68,48)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="319.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$19::write_all (4 samples, 0.02%)</title><rect x="99.8922%" y="293" width="0.0239%" height="15" fill="rgb(252,8,32)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="303.50"></text></g><g><title>kaori.exe`std::sync::reentrant_lock::impl$11::deref (4 samples, 0.02%)</title><rect x="99.8922%" y="277" width="0.0239%" height="15" fill="rgb(223,20,43)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="287.50"></text></g><g><title>kaori.exe`std::io::buffered::linewritershim::impl$1::write_all (4 samples, 0.02%)</title><rect x="99.8922%" y="261" width="0.0239%" height="15" fill="rgb(229,81,49)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="271.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (4 samples, 0.02%)</title><rect x="99.8922%" y="245" width="0.0239%" height="15" fill="rgb(236,28,36)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="255.50"></text></g><g><title>kaori.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (4 samples, 0.02%)</title><rect x="99.8922%" y="229" width="0.0239%" height="15" fill="rgb(249,185,26)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="239.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$1::write (4 samples, 0.02%)</title><rect x="99.8922%" y="213" width="0.0239%" height="15" fill="rgb(249,174,33)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="223.50"></text></g><g><title>kaori.exe`std::io::stdio::handle_ebadf (4 samples, 0.02%)</title><rect x="99.8922%" y="197" width="0.0239%" height="15" fill="rgb(233,201,37)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="207.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write (4 samples, 0.02%)</title><rect x="99.8922%" y="181" width="0.0239%" height="15" fill="rgb(221,78,26)" fg:x="16685" fg:w="4"/><text x="100.1422%" y="191.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write_console_utf16 (2 samples, 0.01%)</title><rect x="99.9042%" y="165" width="0.0120%" height="15" fill="rgb(250,127,30)" fg:x="16687" fg:w="2"/><text x="100.1542%" y="175.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write_valid_utf8_to_console (2 samples, 0.01%)</title><rect x="99.9042%" y="149" width="0.0120%" height="15" fill="rgb(230,49,44)" fg:x="16687" fg:w="2"/><text x="100.1542%" y="159.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write_u16s (2 samples, 0.01%)</title><rect x="99.9042%" y="133" width="0.0120%" height="15" fill="rgb(229,67,23)" fg:x="16687" fg:w="2"/><text x="100.1542%" y="143.50"></text></g><g><title>kaori.exe`std::sys::pal::windows::cvt (2 samples, 0.01%)</title><rect x="99.9042%" y="117" width="0.0120%" height="15" fill="rgb(249,83,47)" fg:x="16687" fg:w="2"/><text x="100.1542%" y="127.50"></text></g><g><title>kaori.exe`std::sys::pal::windows::impl$3::is_zero (2 samples, 0.01%)</title><rect x="99.9042%" y="101" width="0.0120%" height="15" fill="rgb(215,43,3)" fg:x="16687" fg:w="2"/><text x="100.1542%" y="111.50"></text></g><g><title>`0x7FFB8D79448E (2 samples, 0.01%)</title><rect x="99.9042%" y="85" width="0.0120%" height="15" fill="rgb(238,154,13)" fg:x="16687" fg:w="2"/><text x="100.1542%" y="95.50"></text></g><g><title>`0x7FFB8D7945CC (2 samples, 0.01%)</title><rect x="99.9042%" y="69" width="0.0120%" height="15" fill="rgb(219,56,2)" fg:x="16687" fg:w="2"/><text x="100.1542%" y="79.50"></text></g><g><title>`0x7FFB902A2994 (2 samples, 0.01%)</title><rect x="99.9042%" y="53" width="0.0120%" height="15" fill="rgb(233,0,4)" fg:x="16687" fg:w="2"/><text x="100.1542%" y="63.50"></text></g><g><title>kaori.exe`alloc::vec::impl$27::fmt&lt;enum2$&lt;kaori::backend::codegen::instruction::Instruction&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;enum2$ (17 samples, 0.10%)</title><rect x="99.8443%" y="613" width="0.1018%" height="15" fill="rgb(235,30,7)" fg:x="16677" fg:w="17"/><text x="100.0943%" y="623.50"></text></g><g><title>kaori.exe`core::fmt::impl$28::fmt(ref$&lt;slice2$&lt;enum2$ (17 samples, 0.10%)</title><rect x="99.8443%" y="597" width="0.1018%" height="15" fill="rgb(250,79,13)" fg:x="16677" fg:w="17"/><text x="100.0943%" y="607.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugList::entries(core::slice::iter::Iter&lt;enum2$ (17 samples, 0.10%)</title><rect x="99.8443%" y="581" width="0.1018%" height="15" fill="rgb(211,146,34)" fg:x="16677" fg:w="17"/><text x="100.0943%" y="591.50"></text></g><g><title>kaori.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;enum2$ (17 samples, 0.10%)</title><rect x="99.8443%" y="565" width="0.1018%" height="15" fill="rgb(228,22,38)" fg:x="16677" fg:w="17"/><text x="100.0943%" y="575.50"></text></g><g><title>kaori.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;enum2$&lt;kaori::backend::codegen::instruction::Instruction&gt; &gt;*, core::ptr::non_null::NonNull&lt;enum2$ (17 samples, 0.10%)</title><rect x="99.8443%" y="549" width="0.1018%" height="15" fill="rgb(235,168,5)" fg:x="16677" fg:w="17"/><text x="100.0943%" y="559.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugSet::entry (17 samples, 0.10%)</title><rect x="99.8443%" y="533" width="0.1018%" height="15" fill="rgb(221,155,16)" fg:x="16677" fg:w="17"/><text x="100.0943%" y="543.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugInner::entry_with (17 samples, 0.10%)</title><rect x="99.8443%" y="517" width="0.1018%" height="15" fill="rgb(215,215,53)" fg:x="16677" fg:w="17"/><text x="100.0943%" y="527.50"></text></g><g><title>kaori.exe`core::result::Result::and_then (9 samples, 0.05%)</title><rect x="99.8922%" y="501" width="0.0539%" height="15" fill="rgb(223,4,10)" fg:x="16685" fg:w="9"/><text x="100.1422%" y="511.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$5::entry_with::closure$0 (9 samples, 0.05%)</title><rect x="99.8922%" y="485" width="0.0539%" height="15" fill="rgb(234,103,6)" fg:x="16685" fg:w="9"/><text x="100.1422%" y="495.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (9 samples, 0.05%)</title><rect x="99.8922%" y="469" width="0.0539%" height="15" fill="rgb(227,97,0)" fg:x="16685" fg:w="9"/><text x="100.1422%" y="479.50"></text></g><g><title>kaori.exe`core::fmt::impl$73::fmt&lt;enum2$&lt;kaori::backend::codegen::instruction::Instruction&gt; &gt;(enum2$ (9 samples, 0.05%)</title><rect x="99.8922%" y="453" width="0.0539%" height="15" fill="rgb(234,150,53)" fg:x="16685" fg:w="9"/><text x="100.1422%" y="463.50"></text></g><g><title>kaori.exe`core::fmt::Formatter::debug_tuple_field1_finish (9 samples, 0.05%)</title><rect x="99.8922%" y="437" width="0.0539%" height="15" fill="rgb(228,201,54)" fg:x="16685" fg:w="9"/><text x="100.1422%" y="447.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugTuple::finish (5 samples, 0.03%)</title><rect x="99.9162%" y="421" width="0.0299%" height="15" fill="rgb(222,22,37)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="431.50"></text></g><g><title>kaori.exe`core::result::Result::and_then (5 samples, 0.03%)</title><rect x="99.9162%" y="405" width="0.0299%" height="15" fill="rgb(237,53,32)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="415.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (5 samples, 0.03%)</title><rect x="99.9162%" y="389" width="0.0299%" height="15" fill="rgb(233,25,53)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="399.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (5 samples, 0.03%)</title><rect x="99.9162%" y="373" width="0.0299%" height="15" fill="rgb(210,40,34)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="383.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (5 samples, 0.03%)</title><rect x="99.9162%" y="357" width="0.0299%" height="15" fill="rgb(241,220,44)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="367.50"></text></g><g><title>kaori.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (5 samples, 0.03%)</title><rect x="99.9162%" y="341" width="0.0299%" height="15" fill="rgb(235,28,35)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="351.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$19::write_all (5 samples, 0.03%)</title><rect x="99.9162%" y="325" width="0.0299%" height="15" fill="rgb(210,56,17)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="335.50"></text></g><g><title>kaori.exe`std::sync::reentrant_lock::impl$11::deref (5 samples, 0.03%)</title><rect x="99.9162%" y="309" width="0.0299%" height="15" fill="rgb(224,130,29)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="319.50"></text></g><g><title>kaori.exe`std::io::buffered::linewritershim::impl$1::write_all (5 samples, 0.03%)</title><rect x="99.9162%" y="293" width="0.0299%" height="15" fill="rgb(235,212,8)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="303.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (5 samples, 0.03%)</title><rect x="99.9162%" y="277" width="0.0299%" height="15" fill="rgb(223,33,50)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="287.50"></text></g><g><title>kaori.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (5 samples, 0.03%)</title><rect x="99.9162%" y="261" width="0.0299%" height="15" fill="rgb(219,149,13)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="271.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$1::write (5 samples, 0.03%)</title><rect x="99.9162%" y="245" width="0.0299%" height="15" fill="rgb(250,156,29)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="255.50"></text></g><g><title>kaori.exe`std::io::stdio::handle_ebadf (5 samples, 0.03%)</title><rect x="99.9162%" y="229" width="0.0299%" height="15" fill="rgb(216,193,19)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="239.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write (5 samples, 0.03%)</title><rect x="99.9162%" y="213" width="0.0299%" height="15" fill="rgb(216,135,14)" fg:x="16689" fg:w="5"/><text x="100.1662%" y="223.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::is_utf8_console (4 samples, 0.02%)</title><rect x="99.9222%" y="197" width="0.0239%" height="15" fill="rgb(241,47,5)" fg:x="16690" fg:w="4"/><text x="100.1722%" y="207.50"></text></g><g><title>`0x7FFB8D74E6B5 (4 samples, 0.02%)</title><rect x="99.9222%" y="181" width="0.0239%" height="15" fill="rgb(233,42,35)" fg:x="16690" fg:w="4"/><text x="100.1722%" y="191.50"></text></g><g><title>`0x7FFB902A2994 (4 samples, 0.02%)</title><rect x="99.9222%" y="165" width="0.0239%" height="15" fill="rgb(231,13,6)" fg:x="16690" fg:w="4"/><text x="100.1722%" y="175.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugTuple::field (2 samples, 0.01%)</title><rect x="99.9461%" y="309" width="0.0120%" height="15" fill="rgb(207,181,40)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="319.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugTuple::field_with (2 samples, 0.01%)</title><rect x="99.9461%" y="293" width="0.0120%" height="15" fill="rgb(254,173,49)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="303.50"></text></g><g><title>kaori.exe`core::result::Result::and_then (2 samples, 0.01%)</title><rect x="99.9461%" y="277" width="0.0120%" height="15" fill="rgb(221,1,38)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="287.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$4::field_with::closure$0 (2 samples, 0.01%)</title><rect x="99.9461%" y="261" width="0.0120%" height="15" fill="rgb(206,124,46)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="271.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (2 samples, 0.01%)</title><rect x="99.9461%" y="245" width="0.0120%" height="15" fill="rgb(249,21,11)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="255.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (2 samples, 0.01%)</title><rect x="99.9461%" y="229" width="0.0120%" height="15" fill="rgb(222,201,40)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="239.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (2 samples, 0.01%)</title><rect x="99.9461%" y="213" width="0.0120%" height="15" fill="rgb(235,61,29)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="223.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (2 samples, 0.01%)</title><rect x="99.9461%" y="197" width="0.0120%" height="15" fill="rgb(219,207,3)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="207.50"></text></g><g><title>kaori.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (2 samples, 0.01%)</title><rect x="99.9461%" y="181" width="0.0120%" height="15" fill="rgb(222,56,46)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="191.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$19::write_all (2 samples, 0.01%)</title><rect x="99.9461%" y="165" width="0.0120%" height="15" fill="rgb(239,76,54)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="175.50"></text></g><g><title>kaori.exe`std::sync::reentrant_lock::impl$11::deref (2 samples, 0.01%)</title><rect x="99.9461%" y="149" width="0.0120%" height="15" fill="rgb(231,124,27)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="159.50"></text></g><g><title>kaori.exe`std::io::buffered::linewritershim::impl$1::write_all (2 samples, 0.01%)</title><rect x="99.9461%" y="133" width="0.0120%" height="15" fill="rgb(249,195,6)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="143.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (2 samples, 0.01%)</title><rect x="99.9461%" y="117" width="0.0120%" height="15" fill="rgb(237,174,47)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="127.50"></text></g><g><title>kaori.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (2 samples, 0.01%)</title><rect x="99.9461%" y="101" width="0.0120%" height="15" fill="rgb(206,201,31)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="111.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$1::write (2 samples, 0.01%)</title><rect x="99.9461%" y="85" width="0.0120%" height="15" fill="rgb(231,57,52)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="95.50"></text></g><g><title>kaori.exe`std::io::stdio::handle_ebadf (2 samples, 0.01%)</title><rect x="99.9461%" y="69" width="0.0120%" height="15" fill="rgb(248,177,22)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="79.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write (2 samples, 0.01%)</title><rect x="99.9461%" y="53" width="0.0120%" height="15" fill="rgb(215,211,37)" fg:x="16694" fg:w="2"/><text x="100.1961%" y="63.50"></text></g><g><title>kaori.exe`alloc::vec::impl$27::fmt&lt;enum2$&lt;kaori::backend::vm::value::Value&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;enum2$ (4 samples, 0.02%)</title><rect x="99.9461%" y="501" width="0.0239%" height="15" fill="rgb(241,128,51)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="511.50"></text></g><g><title>kaori.exe`core::fmt::impl$28::fmt(ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="99.9461%" y="485" width="0.0239%" height="15" fill="rgb(227,165,31)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="495.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugList::entries(core::slice::iter::Iter&lt;enum2$ (4 samples, 0.02%)</title><rect x="99.9461%" y="469" width="0.0239%" height="15" fill="rgb(228,167,24)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="479.50"></text></g><g><title>kaori.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;enum2$ (4 samples, 0.02%)</title><rect x="99.9461%" y="453" width="0.0239%" height="15" fill="rgb(228,143,12)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="463.50"></text></g><g><title>kaori.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;enum2$&lt;kaori::backend::vm::value::Value&gt; &gt;*, core::ptr::non_null::NonNull&lt;enum2$ (4 samples, 0.02%)</title><rect x="99.9461%" y="437" width="0.0239%" height="15" fill="rgb(249,149,8)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="447.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugSet::entry (4 samples, 0.02%)</title><rect x="99.9461%" y="421" width="0.0239%" height="15" fill="rgb(243,35,44)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="431.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugInner::entry_with (4 samples, 0.02%)</title><rect x="99.9461%" y="405" width="0.0239%" height="15" fill="rgb(246,89,9)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="415.50"></text></g><g><title>kaori.exe`core::result::Result::and_then (4 samples, 0.02%)</title><rect x="99.9461%" y="389" width="0.0239%" height="15" fill="rgb(233,213,13)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="399.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$5::entry_with::closure$0 (4 samples, 0.02%)</title><rect x="99.9461%" y="373" width="0.0239%" height="15" fill="rgb(233,141,41)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="383.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (4 samples, 0.02%)</title><rect x="99.9461%" y="357" width="0.0239%" height="15" fill="rgb(239,167,4)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="367.50"></text></g><g><title>kaori.exe`core::fmt::impl$73::fmt&lt;enum2$&lt;kaori::backend::vm::value::Value&gt; &gt;(enum2$ (4 samples, 0.02%)</title><rect x="99.9461%" y="341" width="0.0239%" height="15" fill="rgb(209,217,16)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="351.50"></text></g><g><title>kaori.exe`core::fmt::Formatter::debug_tuple_field1_finish (4 samples, 0.02%)</title><rect x="99.9461%" y="325" width="0.0239%" height="15" fill="rgb(219,88,35)" fg:x="16694" fg:w="4"/><text x="100.1961%" y="335.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugTuple::finish (2 samples, 0.01%)</title><rect x="99.9581%" y="309" width="0.0120%" height="15" fill="rgb(220,193,23)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="319.50"></text></g><g><title>kaori.exe`core::result::Result::and_then (2 samples, 0.01%)</title><rect x="99.9581%" y="293" width="0.0120%" height="15" fill="rgb(230,90,52)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="303.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (2 samples, 0.01%)</title><rect x="99.9581%" y="277" width="0.0120%" height="15" fill="rgb(252,106,19)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="287.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (2 samples, 0.01%)</title><rect x="99.9581%" y="261" width="0.0120%" height="15" fill="rgb(206,74,20)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="271.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (2 samples, 0.01%)</title><rect x="99.9581%" y="245" width="0.0120%" height="15" fill="rgb(230,138,44)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="255.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$2::write_str (2 samples, 0.01%)</title><rect x="99.9581%" y="229" width="0.0120%" height="15" fill="rgb(235,182,43)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="239.50"></text></g><g><title>kaori.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (2 samples, 0.01%)</title><rect x="99.9581%" y="213" width="0.0120%" height="15" fill="rgb(242,16,51)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="223.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$19::write_all (2 samples, 0.01%)</title><rect x="99.9581%" y="197" width="0.0120%" height="15" fill="rgb(248,9,4)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="207.50"></text></g><g><title>kaori.exe`std::sync::reentrant_lock::impl$11::deref (2 samples, 0.01%)</title><rect x="99.9581%" y="181" width="0.0120%" height="15" fill="rgb(210,31,22)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="191.50"></text></g><g><title>kaori.exe`std::io::buffered::linewritershim::impl$1::write_all (2 samples, 0.01%)</title><rect x="99.9581%" y="165" width="0.0120%" height="15" fill="rgb(239,54,39)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="175.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (2 samples, 0.01%)</title><rect x="99.9581%" y="149" width="0.0120%" height="15" fill="rgb(230,99,41)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="159.50"></text></g><g><title>kaori.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (2 samples, 0.01%)</title><rect x="99.9581%" y="133" width="0.0120%" height="15" fill="rgb(253,106,12)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="143.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$1::write (2 samples, 0.01%)</title><rect x="99.9581%" y="117" width="0.0120%" height="15" fill="rgb(213,46,41)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="127.50"></text></g><g><title>kaori.exe`std::io::stdio::handle_ebadf (2 samples, 0.01%)</title><rect x="99.9581%" y="101" width="0.0120%" height="15" fill="rgb(215,133,35)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="111.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::write (2 samples, 0.01%)</title><rect x="99.9581%" y="85" width="0.0120%" height="15" fill="rgb(213,28,5)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="95.50"></text></g><g><title>kaori.exe`std::sys::stdio::windows::is_console (2 samples, 0.01%)</title><rect x="99.9581%" y="69" width="0.0120%" height="15" fill="rgb(215,77,49)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="79.50"></text></g><g><title>`0x7FFB8D7876C2 (2 samples, 0.01%)</title><rect x="99.9581%" y="53" width="0.0120%" height="15" fill="rgb(248,100,22)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="63.50"></text></g><g><title>`0x7FFB902A2994 (2 samples, 0.01%)</title><rect x="99.9581%" y="37" width="0.0120%" height="15" fill="rgb(208,67,9)" fg:x="16696" fg:w="2"/><text x="100.2081%" y="47.50"></text></g><g><title>kaori.exe`kaori::backend::codegen::bytecode::impl$1::fmt (24 samples, 0.14%)</title><rect x="99.8384%" y="725" width="0.1437%" height="15" fill="rgb(219,133,21)" fg:x="16676" fg:w="24"/><text x="100.0884%" y="735.50"></text></g><g><title>kaori.exe`core::fmt::Formatter::debug_struct_field2_finish (23 samples, 0.14%)</title><rect x="99.8443%" y="709" width="0.1377%" height="15" fill="rgb(246,46,29)" fg:x="16677" fg:w="23"/><text x="100.0943%" y="719.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugStruct::field (23 samples, 0.14%)</title><rect x="99.8443%" y="693" width="0.1377%" height="15" fill="rgb(246,185,52)" fg:x="16677" fg:w="23"/><text x="100.0943%" y="703.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugStruct::field_with (23 samples, 0.14%)</title><rect x="99.8443%" y="677" width="0.1377%" height="15" fill="rgb(252,136,11)" fg:x="16677" fg:w="23"/><text x="100.0943%" y="687.50"></text></g><g><title>kaori.exe`core::result::Result::and_then (23 samples, 0.14%)</title><rect x="99.8443%" y="661" width="0.1377%" height="15" fill="rgb(219,138,53)" fg:x="16677" fg:w="23"/><text x="100.0943%" y="671.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$3::field_with::closure$0 (23 samples, 0.14%)</title><rect x="99.8443%" y="645" width="0.1377%" height="15" fill="rgb(211,51,23)" fg:x="16677" fg:w="23"/><text x="100.0943%" y="655.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (23 samples, 0.14%)</title><rect x="99.8443%" y="629" width="0.1377%" height="15" fill="rgb(247,221,28)" fg:x="16677" fg:w="23"/><text x="100.0943%" y="639.50"></text></g><g><title>kaori.exe`core::fmt::impl$73::fmt&lt;kaori::backend::codegen::constant_pool::ConstantPool&gt; (6 samples, 0.04%)</title><rect x="99.9461%" y="613" width="0.0359%" height="15" fill="rgb(251,222,45)" fg:x="16694" fg:w="6"/><text x="100.1961%" y="623.50"></text></g><g><title>kaori.exe`core::fmt::Formatter::debug_struct_field2_finish (6 samples, 0.04%)</title><rect x="99.9461%" y="597" width="0.0359%" height="15" fill="rgb(217,162,53)" fg:x="16694" fg:w="6"/><text x="100.1961%" y="607.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugStruct::field (6 samples, 0.04%)</title><rect x="99.9461%" y="581" width="0.0359%" height="15" fill="rgb(229,93,14)" fg:x="16694" fg:w="6"/><text x="100.1961%" y="591.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugStruct::field_with (6 samples, 0.04%)</title><rect x="99.9461%" y="565" width="0.0359%" height="15" fill="rgb(209,67,49)" fg:x="16694" fg:w="6"/><text x="100.1961%" y="575.50"></text></g><g><title>kaori.exe`core::result::Result::and_then (6 samples, 0.04%)</title><rect x="99.9461%" y="549" width="0.0359%" height="15" fill="rgb(213,87,29)" fg:x="16694" fg:w="6"/><text x="100.1961%" y="559.50"></text></g><g><title>kaori.exe`core::fmt::builders::impl$3::field_with::closure$0 (6 samples, 0.04%)</title><rect x="99.9461%" y="533" width="0.0359%" height="15" fill="rgb(205,151,52)" fg:x="16694" fg:w="6"/><text x="100.1961%" y="543.50"></text></g><g><title>kaori.exe`core::result::impl$27::branch (6 samples, 0.04%)</title><rect x="99.9461%" y="517" width="0.0359%" height="15" fill="rgb(253,215,39)" fg:x="16694" fg:w="6"/><text x="100.1961%" y="527.50"></text></g><g><title>kaori.exe`core::fmt::impl$73::fmt&lt;std::collections::hash::map::HashMap&lt;usize,usize,std::hash::random::RandomState&gt; &gt;(std::collections::hash::map::HashMap (2 samples, 0.01%)</title><rect x="99.9701%" y="501" width="0.0120%" height="15" fill="rgb(221,220,41)" fg:x="16698" fg:w="2"/><text x="100.2201%" y="511.50"></text></g><g><title>kaori.exe`std::collections::hash::map::impl$6::fmt(std::collections::hash::map::HashMap (2 samples, 0.01%)</title><rect x="99.9701%" y="485" width="0.0120%" height="15" fill="rgb(218,133,21)" fg:x="16698" fg:w="2"/><text x="100.2201%" y="495.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugMap::entries(std::collections::hash::map::Iter (2 samples, 0.01%)</title><rect x="99.9701%" y="469" width="0.0120%" height="15" fill="rgb(221,193,43)" fg:x="16698" fg:w="2"/><text x="100.2201%" y="479.50"></text></g><g><title>kaori.exe`core::fmt::builders::DebugMap::entry (2 samples, 0.01%)</title><rect x="99.9701%" y="453" width="0.0120%" height="15" fill="rgb(240,128,52)" fg:x="16698" fg:w="2"/><text x="100.2201%" y="463.50"></text></g><g><title>kaori.exe`kaori::run_program (16,665 samples, 99.77%)</title><rect x="0.2155%" y="837" width="99.7725%" height="15" fill="rgb(253,114,12)" fg:x="36" fg:w="16665"/><text x="0.4655%" y="847.50">kaori.exe`kaori::run_program</text></g><g><title>kaori.exe`std::io::stdio::_print (25 samples, 0.15%)</title><rect x="99.8384%" y="821" width="0.1497%" height="15" fill="rgb(215,223,47)" fg:x="16676" fg:w="25"/><text x="100.0884%" y="831.50"></text></g><g><title>kaori.exe`std::io::stdio::print_to (25 samples, 0.15%)</title><rect x="99.8384%" y="805" width="0.1497%" height="15" fill="rgb(248,225,23)" fg:x="16676" fg:w="25"/><text x="100.0884%" y="815.50"></text></g><g><title>kaori.exe`std::io::stdio::impl$16::write_fmt (25 samples, 0.15%)</title><rect x="99.8384%" y="789" width="0.1497%" height="15" fill="rgb(250,108,0)" fg:x="16676" fg:w="25"/><text x="100.0884%" y="799.50"></text></g><g><title>kaori.exe`std::io::Write::write_fmt (25 samples, 0.15%)</title><rect x="99.8384%" y="773" width="0.1497%" height="15" fill="rgb(228,208,7)" fg:x="16676" fg:w="25"/><text x="100.0884%" y="783.50"></text></g><g><title>kaori.exe`std::io::default_write_fmt (25 samples, 0.15%)</title><rect x="99.8384%" y="757" width="0.1497%" height="15" fill="rgb(244,45,10)" fg:x="16676" fg:w="25"/><text x="100.0884%" y="767.50"></text></g><g><title>kaori.exe`core::fmt::write (25 samples, 0.15%)</title><rect x="99.8384%" y="741" width="0.1497%" height="15" fill="rgb(207,125,25)" fg:x="16676" fg:w="25"/><text x="100.0884%" y="751.50"></text></g><g><title>all (16,703 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(210,195,18)" fg:x="0" fg:w="16703"/><text x="0.2500%" y="1071.50"></text></g><g><title>`0x7FFB9017C34C (16,678 samples, 99.85%)</title><rect x="0.1497%" y="1045" width="99.8503%" height="15" fill="rgb(249,80,12)" fg:x="25" fg:w="16678"/><text x="0.3997%" y="1055.50">`0x7FFB9017C34C</text></g><g><title>`0x7FFB8E54E8D7 (16,678 samples, 99.85%)</title><rect x="0.1497%" y="1029" width="99.8503%" height="15" fill="rgb(221,65,9)" fg:x="25" fg:w="16678"/><text x="0.3997%" y="1039.50">`0x7FFB8E54E8D7</text></g><g><title>kaori.exe`__scrt_common_main_seh() (16,674 samples, 99.83%)</title><rect x="0.1736%" y="1013" width="99.8264%" height="15" fill="rgb(235,49,36)" fg:x="29" fg:w="16674"/><text x="0.4236%" y="1023.50">kaori.exe`__scrt_common_main_seh()</text></g><g><title>kaori.exe`invoke_main() (16,667 samples, 99.78%)</title><rect x="0.2155%" y="997" width="99.7845%" height="15" fill="rgb(225,32,20)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="1007.50">kaori.exe`invoke_main()</text></g><g><title>kaori.exe`main (16,667 samples, 99.78%)</title><rect x="0.2155%" y="981" width="99.7845%" height="15" fill="rgb(215,141,46)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="991.50">kaori.exe`main</text></g><g><title>kaori.exe`std::rt::lang_start_internal (16,667 samples, 99.78%)</title><rect x="0.2155%" y="965" width="99.7845%" height="15" fill="rgb(250,160,47)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="975.50">kaori.exe`std::rt::lang_start_internal</text></g><g><title>kaori.exe`std::panic::catch_unwind (16,667 samples, 99.78%)</title><rect x="0.2155%" y="949" width="99.7845%" height="15" fill="rgb(216,222,40)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="959.50">kaori.exe`std::panic::catch_unwind</text></g><g><title>kaori.exe`std::panicking::try (16,667 samples, 99.78%)</title><rect x="0.2155%" y="933" width="99.7845%" height="15" fill="rgb(234,217,39)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="943.50">kaori.exe`std::panicking::try</text></g><g><title>kaori.exe`std::panicking::try::do_call (16,667 samples, 99.78%)</title><rect x="0.2155%" y="917" width="99.7845%" height="15" fill="rgb(207,178,40)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="927.50">kaori.exe`std::panicking::try::do_call</text></g><g><title>kaori.exe`std::rt::lang_start_internal::closure$0 (16,667 samples, 99.78%)</title><rect x="0.2155%" y="901" width="99.7845%" height="15" fill="rgb(221,136,13)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="911.50">kaori.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>kaori.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (16,667 samples, 99.78%)</title><rect x="0.2155%" y="885" width="99.7845%" height="15" fill="rgb(249,199,10)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="895.50">kaori.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>kaori.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (16,667 samples, 99.78%)</title><rect x="0.2155%" y="869" width="99.7845%" height="15" fill="rgb(249,222,13)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="879.50">kaori.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>kaori.exe`kaori::main (16,667 samples, 99.78%)</title><rect x="0.2155%" y="853" width="99.7845%" height="15" fill="rgb(244,185,38)" fg:x="36" fg:w="16667"/><text x="0.4655%" y="863.50">kaori.exe`kaori::main</text></g><g><title>kaori.exe`std::fs::read_to_string(ref$ (2 samples, 0.01%)</title><rect x="99.9880%" y="837" width="0.0120%" height="15" fill="rgb(236,202,9)" fg:x="16701" fg:w="2"/><text x="100.2380%" y="847.50"></text></g><g><title>kaori.exe`std::fs::read_to_string::inner (2 samples, 0.01%)</title><rect x="99.9880%" y="821" width="0.0120%" height="15" fill="rgb(250,229,37)" fg:x="16701" fg:w="2"/><text x="100.2380%" y="831.50"></text></g></svg></svg>